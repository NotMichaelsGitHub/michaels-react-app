{"version":3,"file":"static/webpack/static/development/pages/beer.js.ec784fdc04963ffe3664.hot-update.js","sources":["webpack:///./components/beer/types.js"],"sourcesContent":["import React from 'react';\nimport { Pie } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\n//gets the unique countries in the object\nconst getUnqiue = (object, key) => {\n  const allElements = object.map(x => x[key]);\n  const unqiueElements = ([... new Set(allElements)]);\n  return unqiueElements;\n}\n\n//gets how many times those unique elements show up in the object \nconst getValues = (beer, key, labels) =>{\n  const allBeer = beer.map(x => x[key]);\n\n  let values = [];\n  labels.forEach(element => values.push(\n      allBeer.filter((v) => (v === element)).length\n    )\n  );\n\n  return values;\n}\n\nconst Types = (props) => {\n\n  const labels = getUnqiue(props.beer, 'type');\n  const data = getValues(props.beer, 'type', labels);\n  const colors = [\n    \"red\",\n    \"blue\",\n    \"yellow\",\n    \"green\",\n    \"orange\",\n    \"purple\",\n    \"navy\",\n    \"brown\",\n    \"skyblue\",\n    \"salmon\",\n    \"orangered\",\n    \"olive\",\n    \"mediumorchid\",\n    \"maroon\",\n    \"lime\",\n    \"pink\",\n    \"goldenrod\",\n    \"firebrick\",\n    \"darkcyan\",\n    \"cornflowerblue\",\n    \"chocolate\",   \n    \"firebrick\",\n    \"darkcyan\",\n    \"cornflowerblue\",\n    \"chocolate\",\n  ];\n\n  const asdf = {\n    dataPie: {\n      labels: labels,\n      datasets: [\n        {\n          data: data,\n          backgroundColor: colors,\n          hoverBackgroundColor: colors\n        }\n      ]\n    }\n  }\n\n  return (\n    <MDBContainer>\n      <h3>Types of Beer</h3>\n      <Pie data={asdf.dataPie} options={{ responsive: true }} />\n    </MDBContainer>\n  )\n}\n\nexport default (Types);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AADA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AA4BA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAHA;AADA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}
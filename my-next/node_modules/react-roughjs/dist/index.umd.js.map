{"version":3,"file":"index.umd.js","sources":["../src/useShallowEqual.ts","../src/components/Context.tsx","../src/utils.ts","../src/useDrawEffect.ts","../src/components/Arc.tsx","../src/components/Circle.tsx","../src/components/Curve.tsx","../src/components/Ellipse.tsx","../src/components/Line.tsx","../src/components/LinerPath.tsx","../src/components/Path.tsx","../src/components/Polygon.tsx","../src/components/Rectangle.tsx","../src/components/RoughProvider.tsx"],"sourcesContent":["import * as React from 'react'\nimport shallowEqual from 'shallowequal'\n\nconst isEqual = (depsA: any[] = [], depsB: any[] = []) => {\n  if (depsA.length !== depsB.length) {\n    return false\n  }\n  return depsA.every((a, index) => shallowEqual(a, depsB[index]))\n}\nexport const useShallowEqual = (\n  f: React.EffectCallback, deps: any[],\n) => {\n  const ref = React.useRef([])\n  if (!isEqual(ref.current, deps)) {\n    ref.current = deps\n  }\n  React.useEffect(f, ref.current)\n}\n\nexport default useShallowEqual\n","import * as React from 'react'\nimport { RoughSVG } from 'roughjs/src/svg'\n\nexport interface ContextProps {\n  rough: RoughSVG,\n  root: SVGSVGElement | null\n}\n\n\nexport const Context = React.createContext<ContextProps>(null)\n","import { Handlers } from './baseTypes'\n\nexport const loopHandlers = (\n  node: SVGElement | HTMLElement,\n  fName: 'addEventListener' | 'removeEventListener',\n  handlers: Handlers,\n) => {\n  Object.keys(handlers).forEach((name) => {\n    const eventName = name.replace('on', '').toLowerCase()\n    node[fName](eventName, handlers[name])\n  })\n}\n","/* eslint-disable no-case-declarations */\nimport * as React from 'react'\nimport { RoughSVG } from 'roughjs/src/svg'\nimport * as d3Shape from 'd3-shape'\nimport { useShallowEqual } from './useShallowEqual'\nimport { Context } from './components/Context'\nimport { BaseOptions, RoughOptions } from './baseTypes'\nimport { loopHandlers } from './utils'\n\nexport type DrawFunction = 'line' | 'rectangle' | 'ellipse' | 'circle' | 'linearPath' | 'polygon' | 'arc' | 'curve' | 'path'\n\nconst createSvgNode = (tagName: string, attributes: any): SVGGElement => {\n  const common = {\n    opacity: '0',\n    fill: 'black',\n    stroke: 'black',\n  }\n  let attrs = {\n    ...common,\n    ...attributes,\n  }\n  const nsString = 'http://www.w3.org/2000/svg'\n  let newTagName = tagName\n  if (tagName === 'arc') {\n    newTagName = 'path'\n    const arc = d3Shape.arc()\n    const {\n      innerRadius, outerRadius, startAngle, endAngle, x, y, ...rest\n    } = attrs\n    const d = arc({\n      innerRadius: innerRadius || 0,\n      outerRadius: outerRadius || 0,\n      startAngle: startAngle || 0,\n      endAngle: endAngle || 0,\n    })\n    attrs = {\n      ...attrs,\n      ...rest,\n      d,\n      transform: `translate(${x}, ${y})`,\n    }\n  }\n  const node = document.createElementNS(nsString, newTagName)\n  Object.keys(attrs).forEach((attrName) => {\n    node.setAttribute(attrName, attrs[attrName])\n  })\n  return node as any\n}\nexport function useDrawEffect<T extends DrawFunction>(\n  drawFnName: T, deps: Parameters<RoughSVG[T]>, props: BaseOptions = {},\n) {\n  const value = React.useContext(Context)\n  const nodeRef = React.useRef<SVGGElement>(null)\n  const fakeNodeRef = React.useRef<SVGGElement>(null)\n\n  if (!value) {\n    throw Error('Wrap Component inside <RoughProvider>')\n  }\n  const creteFakeNode = () => {\n    switch (drawFnName) {\n      case 'rectangle':\n        return createSvgNode('rect', {\n          x: deps[0],\n          y: deps[1],\n          width: deps[2],\n          height: deps[3],\n        })\n      case 'path':\n        const pathOptions = (deps[1] || {}) as RoughOptions\n        return createSvgNode('path', {\n          d: deps[0],\n          fill: pathOptions.fill ? 'black' : 'none',\n        })\n      default:\n        const options = (deps[deps.length - 1] || {})\n        const newOptions: RoughOptions = {\n          ...(options as any),\n          fill: 'black',\n          fillStyle: 'solid',\n        }\n        const args = [...deps.slice(0, deps.length - 1), newOptions]\n        const node = (value.rough[drawFnName as any](...args as any) as SVGGElement)\n        node.setAttribute('opacity', '0')\n        return node\n    }\n  }\n  const {\n    transform, opacity, onClick, onMouseOut, onMouseOver,\n    cursor, strokeDasharray, onMouseMove,\n  } = props\n  const handlers = {\n    onClick, onMouseOut, onMouseOver, onMouseMove,\n  }\n  const setAttribute = (node: SVGGElement, attrs: object) => {\n    Object.keys(attrs).forEach((attrName) => {\n      if (attrName === 'strokeDasharray') {\n        node.setAttribute('stroke-dasharray', attrs[attrName])\n        return\n      }\n      if (attrs[attrName] !== undefined) {\n        node.setAttribute(attrName, attrs[attrName])\n      }\n    })\n  }\n\n  // Style Effect\n  React.useEffect(() => {\n    if (nodeRef.current) {\n      setAttribute(nodeRef.current, {\n        transform,\n        opacity,\n        cursor,\n        strokeDasharray,\n      })\n    }\n    if (fakeNodeRef.current) {\n      setAttribute(fakeNodeRef.current, {\n        transform,\n      })\n    }\n  }, [transform, opacity, cursor, strokeDasharray])\n  useShallowEqual(() => {\n    if (value.root) {\n      const node = (value.rough[drawFnName as any](...deps as any) as SVGGElement)\n      nodeRef.current = node\n      const fakeNode = creteFakeNode()\n      fakeNodeRef.current = fakeNode\n      setAttribute(node, {\n        transform,\n        opacity,\n        cursor,\n        strokeDasharray,\n      })\n      // NOTE node will be last child of its parent. Will cause some shadowing issues\n      value.root.appendChild(node)\n      if (fakeNode) {\n        loopHandlers(fakeNode, 'addEventListener', handlers)\n        setAttribute(fakeNode, {\n          transform,\n          cursor,\n        })\n        value.root.appendChild(fakeNode)\n      } else {\n        loopHandlers(node, 'addEventListener', handlers)\n      }\n      return () => {\n        nodeRef.current = null\n        value.root.removeChild(node)\n        if (fakeNode) {\n          fakeNodeRef.current = null\n          loopHandlers(fakeNode, 'removeEventListener', handlers)\n          value.root.removeChild(fakeNode)\n        } else {\n          loopHandlers(node, 'removeEventListener', handlers)\n        }\n      }\n    }\n    return () => { }\n  }, [value.root, ...deps])\n  return value\n}\n","import * as React from 'react'\nimport { BaseOptions } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface ArcProps extends BaseOptions {\n  x?: number,\n  y?: number,\n  width?: number,\n  height?: number,\n  start?: number,\n  stop?: number,\n  closed?: boolean\n}\n\nexport const Arc: React.FC<ArcProps> = (props) => {\n  useDrawEffect('arc',\n    [props.x, props.y, props.width, props.height, props.start,\n      props.stop, props.closed, props.options], props)\n  return null\n}\n\nArc.displayName = 'Arc'\nArc.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  start: 0,\n  stop: Math.PI / 2,\n  closed: false,\n}\n\nexport default Arc\n","import * as React from 'react'\nimport { BaseOptions } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\n\nexport interface CircleProps extends BaseOptions {\n  x?: number,\n  y?: number,\n  diameter?: number\n}\nexport const Circle: React.FC<CircleProps> = (props) => {\n  useDrawEffect('circle', [props.x, props.y, props.diameter, props.options], props)\n  return null\n}\n\nCircle.displayName = 'Circle'\nCircle.defaultProps = {\n  x: 0,\n  y: 0,\n  diameter: 0,\n}\n\nexport default Circle\n","import * as React from 'react'\nimport { BaseOptions, Point } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface CurveProps extends BaseOptions {\n  points?: Point[]\n}\n\nexport const Curve: React.FC<CurveProps> = (props) => {\n  useDrawEffect('curve', [props.points, props.options], props)\n  return null\n}\n\nCurve.displayName = 'Curve'\nCurve.defaultProps = {\n  points: [[0, 0]], // NOTE\n}\n\nexport default Curve\n","import * as React from 'react'\nimport { BaseOptions } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface EllipseProps extends BaseOptions {\n  x?: number,\n  y?: number,\n  width?: number,\n  height?: number\n}\n\nexport const Ellipse: React.FC<EllipseProps> = (props) => {\n  const {\n    x, y, width, height, options,\n  } = props\n  useDrawEffect('ellipse', [x, y, width, height, options], props)\n  return null\n}\n\nEllipse.displayName = 'Ellipse'\nEllipse.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n}\n\nexport default Ellipse\n","import * as React from 'react'\nimport { BaseOptions } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\n\nexport interface LineProps extends BaseOptions {\n  x1?: number,\n  x2?: number,\n  y1?: number,\n  y2?: number,\n}\n\nexport const Line: React.FC<LineProps> = (props) => {\n  const {\n    x1, x2, y1, y2, options,\n  } = props\n  useDrawEffect('line', [x1, y1, x2, y2, options], props)\n  return null\n}\n\nLine.displayName = 'Line'\nLine.defaultProps = {\n  x1: 0,\n  x2: 0,\n  y1: 0,\n  y2: 0,\n}\n\nexport default Line\n","import * as React from 'react'\nimport { BaseOptions, Point } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface LinearPathProps extends BaseOptions {\n  points?: Point[]\n}\n\nexport const LinearPath: React.FC<LinearPathProps> = (props) => {\n  useDrawEffect('linearPath', [props.points, props.options], props)\n  return null\n}\n\nLinearPath.displayName = 'LinearPath'\nLinearPath.defaultProps = {\n  points: [],\n}\n\nexport default LinearPath\n","import * as React from 'react'\nimport { BaseOptions } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface PathProps extends BaseOptions {\n  d?: string\n}\n\nexport const Path: React.FC<PathProps> = (props) => {\n  useDrawEffect('path', [props.d, props.options], props)\n  return null\n}\n\nPath.displayName = 'Path'\nPath.defaultProps = {\n  d: '',\n}\n\nexport default Path\n","import * as React from 'react'\nimport { BaseOptions, Point } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface PolygonProps extends BaseOptions {\n  vertices?: Point[]\n}\n\nexport const Polygon: React.FC<PolygonProps> = (props) => {\n  useDrawEffect('polygon', [props.vertices, props.options], props)\n  return null\n}\n\nPolygon.displayName = 'Polygon'\nPolygon.defaultProps = {\n  vertices: [],\n}\n\n\nexport default Polygon\n","import * as React from 'react'\nimport { BaseOptions } from '../baseTypes'\nimport { useDrawEffect } from '../useDrawEffect'\n\nexport interface RectangleProps extends BaseOptions {\n  x?: number,\n  y?: number,\n  width?: number,\n  height?: number,\n}\n\nexport const Rectangle: React.FC<RectangleProps> = (props) => {\n  const {\n    x, y, width, height, options,\n  } = props\n  useDrawEffect('rectangle', [\n    x, y, width, height, options,\n  ], props)\n  return null\n}\n\nRectangle.displayName = 'Rectangle'\nRectangle.defaultProps = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n}\n\nexport default Rectangle\n","import * as React from 'react'\nimport roughjs from 'roughjs/dist/rough.umd'\nimport { Config as RoughConfig } from 'roughjs/src/core'\nimport { Context, ContextProps } from './Context'\n\nimport { RoughOptions } from '../baseTypes'\n\nexport interface Config extends RoughConfig {\n  options?: RoughOptions\n}\nexport interface RoughProviderProps extends React.SVGAttributes<SVGGElement> {\n  config?: Config\n}\n\n\nexport const RoughProvider: React.FC<RoughProviderProps> = (props: RoughProviderProps) => {\n  RoughProvider.displayName = 'RoughProvider'\n  const { Provider } = Context\n  const { config, ...rest } = props\n  const ref = React.useRef<SVGSVGElement>()\n  const [value, setValue] = React.useState<ContextProps>({ root: null, rough: null })\n  React.useEffect(() => {\n    setValue({\n      root: ref.current,\n      rough: roughjs.svg(ref.current, props.config),\n    })\n  }, [ref.current, config])\n  return (\n    <Provider\n      value={value}\n    >\n      <g\n        {...rest}\n        ref={ref}\n      />\n    </Provider>\n  )\n}\n"],"names":["const","isEqual","depsA","depsB","length","every","a","index","shallowEqual","useShallowEqual","f","deps","ref","React","current","Context","loopHandlers","node","fName","handlers","Object","keys","forEach","name","eventName","replace","toLowerCase","createSvgNode","tagName","attributes","common","opacity","fill","stroke","attrs","nsString","newTagName","arc","d3Shape","outerRadius","startAngle","endAngle","x","y","rest","d","innerRadius","transform","document","createElementNS","attrName","setAttribute","useDrawEffect","drawFnName","props","value","nodeRef","fakeNodeRef","Error","creteFakeNode","width","height","pathOptions","options","newOptions","fillStyle","args","slice","rough","onClick","onMouseOut","onMouseOver","cursor","strokeDasharray","onMouseMove","undefined","root","fakeNode","appendChild","removeChild","Arc","start","stop","closed","displayName","defaultProps","Math","PI","Circle","diameter","Curve","points","Ellipse","Line","x2","y1","y2","x1","LinearPath","Path","Polygon","vertices","Rectangle","RoughProvider","Provider","setValue","roughjs","svg","config"],"mappings":"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"}